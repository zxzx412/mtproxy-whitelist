user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
load_module /usr/lib/nginx/modules/ngx_stream_module.so;

events { 
    worker_connections 1024; 
}

# HTTP服务器 - Web管理界面
http {
    include /etc/nginx/mime.types;
    
    server {
        listen ${WEB_PORT};
        root /usr/share/nginx/html;
        index index.html;
        
        location /api/ { 
            proxy_pass http://127.0.0.1:8080; 
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        location /health { 
            return 200 "OK"; 
        }
        
        # 白名单重载接口 - 通过API处理
        location /reload-whitelist {
            proxy_pass http://127.0.0.1:8080/api/reload;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}

# Stream服务器 - MTProxy白名单代理
stream {
    # 日志格式 - 包含白名单状态
    log_format proxy '$remote_addr [$time_local] $protocol $status $bytes_sent $bytes_received $session_time whitelist:$allowed';
    access_log /var/log/nginx/stream_access.log proxy;
    error_log /var/log/nginx/stream_error.log;

    # 白名单映射 - 使用geo模块支持CIDR网段
    geo $remote_addr $allowed {
        default 0;
        include /data/nginx/whitelist_map.conf;
    }

    # 定义后端服务器组 - 基于白名单状态
    map $allowed $backend_pool {
        default reject_backend;
        1 mtproxy_backend;
    }

    # MTProxy后端服务器组
    upstream mtproxy_backend {
        server 127.0.0.1:444 max_fails=3 fail_timeout=30s;
    }

    # 拒绝后端服务器组 - 返回连接拒绝
    upstream reject_backend {
        server 127.0.0.1:9999; # 不存在的端口，自动拒绝连接
    }

    # 白名单验证服务器 - 支持bridge和NAT两种模式
    server {
        # bridge模式：监听内部端口443，由Docker映射到外部${MTPROXY_PORT}
        # NAT模式：直接监听${MTPROXY_PORT}，使用host网络
        listen 443;
        listen ${MTPROXY_PORT};
        proxy_pass $backend_pool;
        proxy_timeout 10s;
        proxy_connect_timeout 3s;
        proxy_responses 1;
        
        # 白名单访问日志，记录白名单状态
        access_log /var/log/nginx/whitelist_access.log proxy;
    }
}