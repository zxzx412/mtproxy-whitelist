services:
  mtproxy-whitelist:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: mtproxy-whitelist
    restart: unless-stopped
    
    # 端口映射 - Bridge模式专用
    ports:
      - "${EXTERNAL_PROXY_PORT:-14202}:443"   # 外部端口 -> nginx内部443端口
      - "${EXTERNAL_WEB_PORT:-8989}:8888"     # 外部端口 -> nginx内部8888端口

    # 环境变量配置
    environment:
      - DEPLOYMENT_MODE=bridge                           # 部署模式：bridge
      - MTPROXY_DOMAIN=${MTPROXY_DOMAIN:-azure.microsoft.com}
      - MTPROXY_TAG=${MTPROXY_TAG:-}
      - SECRET_KEY=${SECRET_KEY:-ee004d64da8e145b8daa35a2012e220e}
      - JWT_EXPIRATION_HOURS=${JWT_EXPIRATION_HOURS:-24}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}

      # 新端口变量标准
      - EXTERNAL_PROXY_PORT=${EXTERNAL_PROXY_PORT:-14202}         # 外部代理端口
      - EXTERNAL_WEB_PORT=${EXTERNAL_WEB_PORT:-8989}              # 外部Web端口
      - BACKEND_MTPROXY_PORT=${BACKEND_MTPROXY_PORT:-444}         # MTProxy后端端口
      - INTERNAL_API_PORT=${INTERNAL_API_PORT:-8080}              # API内部端口

      # 向后兼容的端口别名
      - MTPROXY_PORT=${EXTERNAL_PROXY_PORT:-14202}
      - WEB_PORT=${EXTERNAL_WEB_PORT:-8989}
      - INTERNAL_MTPROXY_PORT=${BACKEND_MTPROXY_PORT:-444}
      - API_PORT=${INTERNAL_API_PORT:-8080}

      # 遗留变量（向后兼容）
      - NAT_MODE=false
      - NGINX_STREAM_PORT=443
      - NGINX_WEB_PORT=8888
    
    # 数据卷挂载
    volumes:
      - mtproxy_data:/data
      - mtproxy_logs:/var/log
      - mtproxy_config:/opt/mtproxy
    
    # 网络配置 - Bridge模式固定使用bridge网络
    # NAT模式请使用 docker-compose.nat.yml 文件
    network_mode: bridge
    
    # 健康检查 - 使用新的多层次健康检查脚本
    healthcheck:
      test: ["CMD", "/usr/local/bin/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
    
    # 安全配置
    security_opt:
      - no-new-privileges:true
    
    # 临时文件系统挂载
    tmpfs:
      - /tmp:size=100M,noexec,nosuid,nodev
      - /var/run:size=100M,noexec,nosuid,nodev
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # 添加标签用于识别
    labels:
      - "traefik.enable=false"
      - "com.mtproxy.whitelist=true"
      - "com.mtproxy.version=4.0"
      - "com.mtproxy.whitelist.mapping=fixed"
      - "com.mtproxy.api.sync=enabled"
      - "com.mtproxy.reload.script=integrated"

# 数据卷定义
volumes:
  mtproxy_data:
    driver: local
  mtproxy_logs:
    driver: local  
  mtproxy_config:
    driver: local